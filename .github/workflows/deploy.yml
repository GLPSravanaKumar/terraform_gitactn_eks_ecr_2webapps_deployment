name: Deploy Webapp on EKS

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action to perform apply or destroy'
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
        
env:
  AWS_REGION: ap-south-1
  ECR_REPO1: glps-webpp1-repo
  ECR_REPO2: glps-webpp2-repo
  CLUSTER_NAME: glps-demo-eks-cluster

jobs:
  
  build-and-deploy:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0'

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
      
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.14.0'

      - name: Build & Push Docker Images
        run: |
          chmod +x ./scripts/build_push_images.sh
          ./scripts/build_push_images.sh
          
      - name: Set webapp1 & webapp2 images URL for Terraform
        run: |
          echo "WEB_IMAGE1=${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO1}:latest" >> $GITHUB_ENV
          echo "WEB_IMAGE2=${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO2}:latest" >> $GITHUB_ENV
      
      
      
      - name: Terraform Init
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="bucket=glps-dev-backend-bucket" \
            -backend-config="region=ap-south-1" \
            -backend-config="key=eks/terraform.tfstate"
          
      - name: Terraform Validate & Plan
        working-directory: ./terraform
        run: |
          terraform validate
          terraform plan -var="web_image1=${WEB_IMAGE1}" -var="web_image2=${WEB_IMAGE2}"

        

      - name: Terraform Apply or Destroy
        run: |
          if [ "${{ github.event.inputs.action.options }}" == "destroy" ]; then
            terraform destroy -auto-approve -var="web_image1=${WEB_IMAGE1}" -var="web_image2=${WEB_IMAGE2}"
          else
            terraform apply -auto-approve -var="web_image1=${WEB_IMAGE1}" -var="web_image2=${WEB_IMAGE2}"
          fi
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1

      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --region ${AWS_REGION} --name ${CLUSTER_NAME} 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1 
        
      